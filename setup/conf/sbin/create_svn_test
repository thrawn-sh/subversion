#!/bin/bash -e

VERSION="${1}"; shift
SVN="/opt/bin/svn_${VERSION}"
if [ ! -f "${SVN}" ]; then
	echo "${SVN} not found" 1>&2
	exit 1;
fi
SVNADMIN="/opt/bin/svnadmin_${VERSION}"
if [ ! -f "${SVNADMIN}" ]; then
	echo "${SVNADMIN} not found" 1>&2
	exit 1;
fi

TMP_DIR="`mktemp -d`"
LOCAL="${TMP_DIR}/local"
DUMP="${TMP_DIR}/dump"
BASE="${LOCAL}/trunk/00000000-0000-0000-0000-000000000000"

REPO="${TMP_DIR}/svn"

create_file() { #{{{1
	local file="${1}"; shift
	local delete="${1}"; shift

	mkdir -p `dirname "${file}"`
	local content
	for content in A B C; do
		echo "${content}" >                                        "${file}"
		"${SVN}" add     --quiet --parents                         "${file}" || true
		"${SVN}" propset --quiet svn:mime-type        text/plain   "${file}"
		"${SVN}" propset --quiet modifiedProperty     "${content}" "${file}"
		"${SVN}" propset --quiet "property${content}" "${content}" "${file}"
		commit "${file} with content: ${content}"                  "${file}"
	done

	if [ "${delete}" -eq 1 ]; then
		# copy
		local copy=`echo "${file}" | sed 's:delete:copy:g'`
		"${SVN}" copy "${file}"            "${copy}"
		commit "copied ${file} -> ${copy}" "${copy}"
		# move
		local tmp=`echo ${file} | sed 's:delete:tmp:g'`
		local move=`echo ${file} | sed 's:delete:move:g'`
		"${SVN}" copy "${file}"           "${tmp}"
		commit "copied ${file} -> ${tmp}" "${tmp}"
		"${SVN}" mv "${tmp}"             "${move}"
		commit "moved ${tmp} -> ${move}" "${move}"
		# delete
		rm -f "${file}"
		"${SVN}" remove --quiet  "${file}"
		commit "deleted ${file}" "${file}"
	fi
} #}}}1
create_folder() { #{{{1
	local folder="${1}"; shift
	local delete="${1}"; shift

	mkdir -p "${folder}"
	"${SVN}" add     --quiet --parents               "${folder}" || true
	"${SVN}" propset --quiet svn:ignore      "*.bin" "${folder}"
	"${SVN}" propset --quiet chustomProperty "test"  "${folder}"
	commit "created ${folder}"                       "${folder}"

	if [ "${delete}" -eq 1 ]; then
		# copy
		local copy=`echo "${folder}" | sed 's:delete:copy:g'`
		"${SVN}" copy "${folder}"            "${copy}"
		commit "copied ${folder} -> ${copy}" "${copy}"
		# move
		local tmp=`echo ${folder} | sed 's:delete:tmp:g'`
		local move=`echo ${folder} | sed 's:delete:move:g'`
		"${SVN}" copy "${folder}"           "${tmp}"
		commit "copied ${folder} -> ${tmp}" "${tmp}"
		"${SVN}" mv "${tmp}"             "${move}"
		commit "moved ${tmp} -> ${move}" "${move}"
		# delete
		rm -rf "${folder}"
		"${SVN}" remove --quiet    "${folder}"
		commit "deleted ${folder}" "${folder}"
	fi
} #}}}1
commit() { #{{{1
	local message="${1}"; shift
	message=`echo "${message}" | sed "s:${LOCAL}::g"`
	local resource
	for resource in "${@}"; do
		"${SVN}" add --parents --quiet "${resource}" || true
	done
	"${SVN}" commit --message "${message}" "${LOCAL}"

	local version=`"${SVN}" info "file://${REPO}" | grep ^Revision: | awk '{print $2}'`
	local src
	for src in `find "${LOCAL}" -not -wholename "*/.svn*"`; do
		local target=`echo "${src}" | sed "s:^${LOCAL}:${DUMP}/${version}:g"`
		if [ -d "${src}" ]; then
			mkdir -p "${target}"
		else
			cp "${src}" "${target}"
		fi
		if [ "${target}" = "${DUMP}/${version}" ]; then
			target="${target}/ROOT"
		fi

		local rsrc=`echo "${src}" | sed "s:^${LOCAL}:file\://${REPO}:g"`
		"${SVN}" log                --xml "${rsrc}" | xmllint --format - | sed "s:${REPO}::g" | sed -E "s:[0-9]{3}Z</date>:Z</date>:g" > "${target}.log"
		"${SVN}" info               --xml "${rsrc}" | xmllint --format - | sed "s:${REPO}::g" | sed -E "s:[0-9]{3}Z</date>:Z</date>:g" > "${target}.info"
		"${SVN}" proplist --verbose --xml "${rsrc}" | xmllint --format - | sed "s:${REPO}::g"                                          > "${target}.proplist"
	done
} #}}}1

### init {{{1
mkdir -p "${REPO}" "${DUMP}"

"${SVNADMIN}" create "${REPO}"
"${SVN}" checkout --quiet "file://${REPO}" "${LOCAL}"

### prepare repo {{{1
mkdir -p "${BASE}"
mkdir -p "${LOCAL}/branches"
mkdir -p "${LOCAL}/tags"
commit "create structure" "${BASE}" "${LOCAL}/branches" "${LOCAL}/tags"

# copy {{{1
create_file   "${BASE}/copy/file.txt" 0
create_file   "${BASE}/copy/file_delete.txt" 1
create_folder "${BASE}/copy/folder" 0
create_folder "${BASE}/copy/folder_delete" 1

# download {{{1
create_file "${BASE}/download/file.txt" 0
create_file "${BASE}/download/file_delete.txt" 1

# exists {{{1
create_file   "${BASE}/exists/file.txt" 0
create_file   "${BASE}/exists/file_delete.txt" 1
create_folder "${BASE}/exists/folder" 0
create_folder "${BASE}/exists/folder_delete" 1

# info {{{1
# TODO properties
create_file   "${BASE}/info/file.txt" 0
create_file   "${BASE}/info/file_delete.txt" 1
create_folder "${BASE}/info/folder" 0
create_folder "${BASE}/info/folder_delete" 1

# list {{{1
create_file   "${BASE}/list/file.txt" 0
create_file   "${BASE}/list/file_delete.txt" 1
create_folder "${BASE}/list/folder" 0
create_folder "${BASE}/list/folder_delete" 1

# lock {{{1
mkdir -p      "${BASE}/lock"
echo A >      "${BASE}/lock/file.txt"
commit        "${BASE}/lock/file.txt with content: A" "${BASE}/lock/file.txt"
echo B >      "${BASE}/lock/file.txt"
"${SVN}" lock "${BASE}/lock/file.txt"
commit        "${BASE}/lock/file.txt with content: B + lock" "${BASE}/lock/file.txt"

# log {{{1
create_file   "${BASE}/log/file.txt" 0
create_file   "${BASE}/log/file_delete.txt" 1

### package {{{1
cd "${TMP_DIR}"
for i in dump svn; do
	zip_file="${i}.zip"
	zip --quiet --recurse-paths "${zip_file}" "${i}"
	md5sum  "${zip_file}" > "${zip_file}.md5"
	sha1sum "${zip_file}" > "${zip_file}.sha1"
done

chown -R www-data:www-data ${REPO}
mv svn test

### cleanup {{{1
rm -rf        /tmp/svn
mv ${TMP_DIR} /tmp/svn
chmod 0755    /tmp/svn
